<?xml version="1.0"?>

<launch>
	
	<arg name="map_path"		  default="/home/wookjaejeong"/>
	<arg name="map_file"		  default="mapfile.bt"/>

	<arg name="database_path"	  default="rtabmap.db"/>
	<arg name="navigation"	  	  default="false"/>
	<arg name="rgbd_odometry"     default="true"/>
	<arg name="init_db"			  default="false"/>
	
	<arg name="rtabmapviz"		  default="false"/>
	<arg name="manager"			  default="rtabmap_manager"/>
	<arg name="rtabmap_cfg"		  default="$(find turtlebot3_bringup)/launch/config/rtabmap.ini"/>

	<arg if="$(arg init_db)"		name="args"			  default="--delete_db_on_start"/>
	<arg unless="$(arg init_db)"	name="args"			  default=""/>

	<arg name="resolution"		  default="qhd"/>
	<arg name="rgb_topic"       default="/camera/color/image_rect_color"/>
	<arg name="depth_topic"     default="/camera/depth/image_rect_raw"/>
	<arg name="info_topic" 		default="/camera/color/camera_info"/>

	<arg name="wait_for_transform"  default="3.0"/> 

	<arg name="cmd_vel_topic" default="/cmd_vel" />
	<arg name="vo_topic"   default="/rtabmap/odom"/>
	<arg name="wo_topic"   default="/robot/odom"/>
	<arg name="odom_topic" default="/rtabmap/odometry/filtered" />
	<arg name="odom_topic_" default="/rtabmap/odom"/>

	<arg name="odom_frame_id" default="odom"/>
	<arg name="base_frame_id"	default="base_footprint"/>
	<arg name="map_frame_id"	default="map"/>
 
   <!-- Visual Odom Args 
        -"strategy"        : Strategy: Frame-to-Map 1=Frame-To-Frame
        -"feature"         : Feature type: 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK
        -"nn"              : Nearest neighbor strategy : 0=Linear, 1=FLANN_KDTREE, 2=FLANN_LSH, 3=BRUTEFORCE 
                             Set to 1 for float descriptor like SIFT/SURF                  
                             Set to 3 for binary descriptor like ORB/FREAK/BRIEF/BRISK  
		-"cor_type"		   : 0=Features Matching, 1=Optical Flow
        -"max_depth"       : Maximum features depth (m)  
        -"min_inliers"     : Minimum visual correspondences to accept a transformation (m)  
        -"inlier_distance" : RANSAC maximum inliers distance (m)  
        -"local_map"       : Local map size: number of unique features to keep track 
    -->
   <arg name="strategy" default="0" />
   <arg name="cor_type" default="0"/>
   <arg name="feature" default="6" />
   <arg name="nn" default="3" />
   <arg name="max_depth" default="10.0" />
   <arg name="min_depth" default="0.0" />
   <arg name="max_features" default="500" />
   <arg name="min_inliers" default="8" />
   <arg name="inlier_distance" default="0.1" />
   <arg name="max_new_feature"	default="500" />
   <arg name="local_map" default="1000" />

   <!-- RTAB Map params
	-->
   <arg name="optimizer_strategy" default="0"/>   <!--[0=Vis, 1=Icp, 2=VisIcp]-->
   <arg name="use_icp"		  default="false"/>
   <arg name="2dslam"	default="true"/>
   <arg name="tf_delay" default="0.05"/>	<!-- map->odom tf publish delay(sec) -->
   <arg name="estimation_type"	default="1"/>  <!--Motion estimation approach: 0:3D->3D, 1:3D->2D (PnP), 2:2D->2D (Epipolar Geometry) -->
   <arg name="use_odom_features" default="true"/>
   <arg name="reduce_graph"		default="false"/>
   <arg name="loop_thr"			default="0.9"/> 
   <arg name="grid_update_error" default="0.001"/>



	<!-- Start Rtabmap -->
	<group ns="rtabmap">
		<node pkg="nodelet" type="nodelet" name="$(arg manager)"  args="manager" output="screen">
			<param name="num_worker_threads"		value="20"/>
		</node>

		<node pkg="nodelet" type="nodelet" name="data_odom_sync" args="load rtabmap_ros/data_odom_sync $(arg manager)">
			<remap from="rgb/image_in"       to="$(arg rgb_topic)"/>
			<remap from="depth/image_in"     to="$(arg depth_topic)"/>
			<remap from="rgb/camera_info_in" to="$(arg info_topic)"/>

			<remap from="odom_in"             to="$(arg odom_topic)"/>
			<param name="approx_sync" type="bool" value="true"/>

			<remap from="rgb/image_out"       to="data_odom_sync/image"/>
			<remap from="depth/image_out"     to="data_odom_sync/depth"/>
			<remap from="rgb/camera_info_out" to="data_odom_sync/camera_info"/>
			<remap from="odom_out"            to="odom_sync"/>
		</node>

		<node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load rtabmap_ros/point_cloud_xyzrgb $(arg manager)">
			<remap from="rgb/image"       to="data_odom_sync/image"/>
			<remap from="depth/image"     to="data_odom_sync/depth"/>
			<remap from="rgb/camera_info" to="data_odom_sync/camera_info"/>

			<remap from="cloud"           to="voxel_cloud" />

			<param name="voxel_size" type="double" value="0.05"/>
			<param name="decimation"	value="50"/>
			<param name="Odom/AlignWithGround"	value="true"/>
		</node>

		<!-- Odometry -->
		<node if="$(arg rgbd_odometry)" pkg="nodelet" type="nodelet" name="visual_odom" args="load rtabmap_ros/rgbd_odometry $(arg manager)" output="screen">
		<!--node if="$(arg rgbd_odometry)" pkg="rtabmap_ros" type="rgbdicp_odometry" name="visual_odometry" output="screen"-->
			<remap from="rgb/image"       to="$(arg rgb_topic)"/>
			<remap from="depth/image"     to="$(arg depth_topic)"/>
			<remap from="rgb/camera_info" to="$(arg info_topic)"/>

			<remap from="scan_cloud"	to="voxel_cloud"/>

			<!-- Dont publish a odom->base_link tf, robot_localization will do that -->
			<param name="publish_tf" type="bool" value="false"/> 
			<param name="frame_id" type="string" value="$(arg base_frame_id)"/>
			<param name="approx_sync" type="bool" value="true"/>
			<param name="config_path"		  type="string" value="$(arg rtabmap_cfg)"/>
			
			<param name="Odom/Strategy" type="string" value="$(arg strategy)"/> 

			<param name="Vis/EstimationType" type="string" value="$(arg estimation_type)"/>
			<param name="Vis/FeatureType" type="string" value="$(arg feature)"/>  
			<param name="Vis/CorNNType" type="string" value="$(arg nn)"/>
			<param name="Vis/MaxDepth" type="string" value="$(arg max_depth)"/>  
			<param name="Vis/MinDepth" type="string" value="$(arg min_depth)"/>
			<param name="Vis/MinInliers" type="string" value="$(arg min_inliers)"/> 
			<param name="Vis/InlierDistance" type="string" value="$(arg inlier_distance)"/>       
			<param name="OdomF2M/MaxSize" type="string" value="$(arg local_map)"/>
			<param name="OdomF2M/MaxNewFeatures" value="$(arg max_new_feature)"/>
			<param name="Odom/FillInfoData" type="string" value="true"/>
			<param name="Vis/MaxFeatures" type="string" value="$(arg max_features)"/>
		
			
			<param name="Vis/CorType" value="$(arg cor_type)"/>
			<param name="GFTT/MinDistance" type="string" value="10"/>
			<param name="Odom/ResetCountdown"              value="1" />
			<param name="Odom/VisKeyFrameThr"			   value="10" />
			
			<param name="Reg/Force3DoF"    value="$(arg 2dslam)" />
		</node>

		<node pkg="nodelet" type="nodelet" name="rtabmap" args="load rtabmap_ros/rtabmap $(arg manager) $(arg args)" output="screen">
		<!--node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)"-->
			
			<!-- inputs -->
			<remap from="scan"            to="/scan"/>
			<remap from="scan_cloud"		  to="voxel_cloud"/>
			<remap from="rgb/image"       to="$(arg rgb_topic)"/>
			<remap from="depth/image"     to="$(arg depth_topic)"/>
			<remap from="rgb/camera_info" to="$(arg info_topic)"/>

			<!-- output -->
			<remap from="/rtabmap/octomap_grid" to="/map"/>

			<!-- RTABMAP_ROS parameters -->
			<param name="database_path"       type="string" value="$(arg database_path)"/>
			<param name="frame_id"            type="string" value="$(arg base_frame_id)"/>
			<param name="config_path"		  type="string" value="$(arg rtabmap_cfg)"/>
			<param name="publish_tf_"		  value="$(eval not navigation)" />
			<param name="publish_tf"		  value="true" />
			<param name="tf_delay"			  value="$(arg tf_delay)"/>
			<param name="use_action_for_goal" type="string" value="true"/>

			<remap from="goal"			  to="/move_base_simple/goal"/>
			<remap from="move_base"		  to="/move_base"/>
			<remap from="goal_out"		  to="/move_base/current_goal"/>

			<param name="map_frame_id"		  type="string" value="map"/>
			<param name="odom_frame_id"       type="string" value="$(arg odom_frame_id)"/>
			<param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
			<param name="subscribe_depth"     type="bool"   value="true"/>
			<param name="subscribe_scan"      type="bool"   value="false"/>
			<param name="subscribe_scan_cloud"				value="$(arg use_icp)"/>
			<param name="approx_sync"		  type="bool" 	value="true"/>
			<param name="queue_size"		  type="int"	value="10"/>

			<!-- localization mode -->
			<param     if="$(arg navigation)" name="Mem/IncrementalMemory" type="string" value="false"/>
			<param unless="$(arg navigation)" name="Mem/IncrementalMemory" type="string" value="true"/>
			<param name="Mem/InitWMWithAllNodes" type="string" value="$(arg navigation)"/> 


			<!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
			<param name="Grid/3D" value="true"/>                                    <!--[A 3D occupancy grid is required if you want an Octomap. Set to false if you want only a 2D map, the cloud will be projected on xy plane. A 2D map can be still generated if checked, but it requires more memory and time to generate it. Ignored if laser scan is 2D and "Grid/FromDepth" is false.]-->
			<param name="Grid/FromDepth"	value="true"/>
			<param name="Grid/NormalsSegmentation" value="false"/>
<!---->		<param name="Grid/MaxGroundHeight" value="0.01"/>                        <!--[Maximum ground height (0=disabled). Should be set if "Grid/NormalsSegmentation" is true.]-->
<!---->		<param name="Grid/MaxObstacleHeight" value="1.0"/>                      <!--[Maximum obstacles height (0=disabled).]-->
<!---->		<param name="Grid/MinGroundHeight" value="-0.1"/>                        <!--[Minimum ground height (0=disabled).]-->
			<param name="Grid/CellSize"	value="0.05"/>
			<param name="Grid/RayTracing" value="true"/>		<!--filling unknown space between the sensor and occupied cells.-->
			
			<param name="GridGlobal/FootprintRadius" value="0.17"/>
			<param name="GridGlobal/Eroded" value="true"/>
			<param name="GridGlobal/MinSize" value="50"/>
			<param name="GridGlobal/UpdateError"  value="$(arg grid_update_error)"/>

<!---->		<param name="Kp/DetectorStrategy" value="$(arg feature)"/>                           <!--[0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB.]-->
<!---->		<param name="Kp/MaxFeatures" value="$(arg max_features)"/>                              <!--[Maximum features extracted from the images (0 means not bounded, <0 means no extraction).]-->
			<param name="Kp/NNStrategy" value="$(arg nn)"/>	

<!---->		<param name="Reg/Force3DoF" value="$(arg 2dslam)"/>                              <!--[Force 3 degrees-of-freedom transform (3Dof: x,y and yaw). Parameters z, roll and pitch will be set to 0.]-->
			<param name="Reg/Strategy" value="$(arg optimizer_strategy)"/>  

			<param name="Rtabmap/StartNewMapOnLoopClosure" value="$(eval not navigation)"/>
			<param name="Rtabmap/LoopThr"	value="$(arg loop_thr)"/> <!-- default : 0.11 -->

			<param name="RGBD/LoopClosureReextractFeatures"	value="false"/> <!-- Extract features even if there are some already in the nodes -->
			<param name="RGBD/CreateOccupancyGrid"	 value="true"/>
			<param name="RGBD/NeighborLinkRefining"  value="false"/>  <!-- Do odometry correction with consecutive laser scans -->
			<param name="RGBD/ProximityBySpace"      value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
			<param name="RGBD/ProximityByTime"       value="true"/> <!-- Local loop closure detection with locations in STM -->
			<param name="RGBD/ProximityMaxPaths"	 value="0"/> <!-- 0: no limit -->
			<param name="RGBD/ProximityPathMaxNeighbors" value="0"/>
			<param name="RGBD/OptimizeFromGraphEnd"  value="false"/> <!-- true : Fixed odom frame, graph moves / false : Fixed graph , odom frame moves --> 
			<param name="RGBD/OptimizeMaxError"	     value="0.00" />
			<param name="RGBD/GoalReachedRadius"	 value="0.1"/>
			<param name="Optimizer/Robust"			 value="true"/>  <!--Robust graph optimization using Vertigo (only work for g2o and GTSAM optimization strategies). Not compatible with "RGBD/OptimizeMaxError" if enabled. -->
<!---->		<param name="Optimizer/Strategy" value="1"/>                            <!--[Graph optimization strategy: 0=TORO, 1=g2o and 2=GTSAM.]-->
			<param name="Optimizer/Iterations" value="50"/>
			<param name="Optimizer/Epsilon"	 value="0.0"/>

			<param name="Mem/RehearsalSimilarity"	value="0.6"/> 
			<param name="Mem/STMSize"				value="50"/>
			<param name="Mem/UseOdomFeatures"		value="$(arg use_odom_features)"/>
			<param name="Mem/ReduceGraph"			value="$(arg reduce_graph)"/>

			<param name="Vis/MinInliers" type="string" value="$(arg min_inliers)"/> 
			<param name="Vis/EstimationType" type="string" value="$(arg estimation_type)"/>  <!--Motion estimation approach: 0:3D->3D, 1:3D->2D (PnP), 2:2D->2D (Epipolar Geometry) -->
			<param name="Icp/PointToPlane"	value="false"/>
			<param name="Icp/PointToPlaneK" value="20.0"/>
			<param name="Icp/PointToPlaneRadius" value="0.0"/>
			<param name="Icp/VoxelSize"		value="0.05"/>
			<param name="Icp/PM"			value="true"/>
			<param name="Icp/PMOutlierRatio"	value="0.2"/>

			<param name="Icp/CorrespondenceRatio" value="0.3"/>
			<param name="Icp/Epsilon"		value="0.01"/>
			<param name="Icp/MaxCorrespondenceDistance" value="10.0"/>

			<param name="OdomF2M/MaxSize" type="string" value="$(arg local_map)"/>
			<param name="OdomF2M/MaxNewFeatures" type="string" value="$(arg max_new_feature)"/>
			
			<param name="DbSqlite3/InMemory"		value="true"/>
		</node>
		
		<!-- Start tf publish : odom->base_footprint -->
		<node pkg="robot_localization" type="ekf_localization_node" name="ekf_node_base" clear_params="true">
			<rosparam command="load" file="$(find turtlebot3_bringup)/params/ekf_params_baseframe.yaml"/> 	
		</node>

		<!-- Visualisation RTAB-Map -->
		 <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="" output="screen">
			 <param name="subscribe_depth" type="bool" value="true"/>
			 <param name="subscribe_odom_info" type="bool" value="true"/>
			 <param name="approx_sync" type="bool" value="true"/>
			 <param name="frame_id" type="string" value="$(arg base_frame_id)"/>

			 <remap from="rgb/image" to="$(arg rgb_topic)"/>
			 <remap from="depth/image" to="$(arg depth_topic)"/>
			 <remap from="rgb/camera_info" to="$(arg info_topic)"/>
		 </node>

		<!--node if="$(arg navigation)" pkg="humanoid_localization" type="localization_node" name="localization_node" output="screen" respawn="true">
			<remap from="point_cloud"		to="voxel_cloud"/>
			<remap from="imu"				to="/robot/imu_filtered"/>
			<rosparam file="$(find turtlebot3_bringup)/params/humanoid_localization.yaml" command="load"/>
		</node-->

	</group>
	
	<!--
	<node pkg="octomap_server" name="octomap_server" type="octomap_server_node" args="$(arg map_path)/$(arg map_file)"/>

	<node pkg="humanoid_localization" type="localization_node" name="localization_node" output="screen" respawn="true">
		<remap from="point_cloud"		to="/rtabmap/voxel_cloud"/>
		<remap from="imu"				to="/robot/imu_filtered"/>
		<rosparam file="$(find turtlebot3_bringup)/params/humanoid_localization.yaml" command="load"/>
	</node>
-->
	<node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
		<remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
		<remap from="odom" to="$(arg odom_topic)"/>

		<!--param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" /-->
		<param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" />
		<param name="base_global_planner" value="global_planner/GlobalPlanner"/>

		<rosparam file="$(find turtlebot3_bringup)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find turtlebot3_bringup)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find turtlebot3_bringup)/params/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find turtlebot3_bringup)/params/global_costmap_params.yaml" command="load" />
		<rosparam file="$(find turtlebot3_bringup)/params/move_base_params.yaml" command="load" />
		<rosparam file="$(find turtlebot3_bringup)/params/base_local_planner_params.yaml" command="load" />
		<rosparam file="$(find turtlebot3_bringup)/params/base_global_planner_params.yaml" command="load"/>
	</node>	
</launch>
